// <auto-generated />
using System;
using Infrastructure.SQLServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(MainContextSQLServer))]
    partial class MainContextSQLServerModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relation:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.Rol", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateLastUpdate")
                        .HasColumnType("datetime");

                    b.Property<bool>("Root")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Active");

                    b.HasKey("Id");

                    b.ToTable("Rol", "dbo");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateLastUpdate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Email");

                    b.Property<Guid?>("RolNavigationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Active");

                    b.HasKey("Id");

                    b.HasIndex("RolNavigationId");

                    b.ToTable("User", "dbo");
                });

            modelBuilder.Entity("Domain.Entities.Rol", b =>
                {
                    b.OwnsOne("Domain.Common.ValueObjectString", "Description", b1 =>
                        {
                            b1.Property<Guid>("RolId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("Description");

                            b1.HasKey("RolId");

                            b1.ToTable("Rol", "dbo");

                            b1.WithOwner()
                                .HasForeignKey("RolId");
                        });

                    b.OwnsOne("Domain.Common.ValueObjectString", "Name", b1 =>
                        {
                            b1.Property<Guid>("RolId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("Name");

                            b1.HasKey("RolId");

                            b1.ToTable("Rol", "dbo");

                            b1.WithOwner()
                                .HasForeignKey("RolId");
                        });

                    b.Navigation("Description");

                    b.Navigation("Name");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.HasOne("Domain.Entities.Rol", "RolNavigation")
                        .WithMany("Users")
                        .HasForeignKey("RolNavigationId");

                    b.OwnsOne("Domain.Common.ValueObjectString", "Name", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("Name");

                            b1.HasKey("UserId");

                            b1.ToTable("User", "dbo");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("Domain.Common.ValueObjectString", "Password", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("Password");

                            b1.HasKey("UserId");

                            b1.ToTable("User", "dbo");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("Domain.Common.ValueObjectString", "UserName", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("UserName");

                            b1.HasKey("UserId");

                            b1.ToTable("User", "dbo");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("Name");

                    b.Navigation("Password");

                    b.Navigation("RolNavigation");

                    b.Navigation("UserName");
                });

            modelBuilder.Entity("Domain.Entities.Rol", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
